{"version":3,"sources":["common/pagination.jsx","common/genrelist.jsx","common/TableHeader.jsx","common/TableBody.jsx","common/Table.jsx","common/like.jsx","common/MoviesTable.jsx","services/fakeGenreService.js","services/fakeMovieService.js","App.js","utils/paginate.jsx","serviceWorker.js","index.js"],"names":["Pagination","props","pageCount","pageSize","currentPage","onPageChange","pagesCount","Math","ceil","pages","_","range","react_default","a","createElement","aria-label","className","map","page","key","style","cursor","onClick","GenreList","items","onItemSelect","textProperty","valueProperty","selectedItem","item","defaultProps","TableHeader","raiseSort","path","sortColumn","Object","objectSpread","_this","order","onSort","renderSortIcon","column","_this2","this","columns","label","Component","TableBody","renderCell","content","get","createKey","_id","_this$props","data","Table","movies","onLike","onDelete","common_TableHeader","common_TableBody","Like","classes","liked","aria-hidden","MoviesTable","movie","like","common_Table","genres","name","title","genre","numberInStock","dailyRentalRate","publishDate","App","state","selectedGenre","styles","topPad","paddingTop","handleDelete","id","setState","filter","handleSort","handleLike","toConsumableArray","index","indexOf","handlePageChange","handleGenreSelect","getPageData","_this$state","allMovies","filtered","m","pageNumber","startIndex","slice","take","value","paginate","orderBy","totalCount","length","concat","g","_this$state2","_this$getPageData","genrelist","Fragment","common_MoviesTable","pagination","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.408208b9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = props => {\r\n  const { pageCount, pageSize, currentPage, onPageChange } = props;\r\n  const pagesCount = Math.ceil(pageCount / pageSize);\r\n  if (pagesCount === 1) return null;\r\n  const pages = _.range(1, pagesCount + 1);\r\n  return (\r\n    <nav aria-label=\"Page navigation\">\r\n      <ul className=\"pagination\">\r\n        {pages.map(page => {\r\n          return (\r\n            <li\r\n              key={page}\r\n              className={\r\n                page === currentPage ? \"page-item active\" : \"page-item\"\r\n              }\r\n              style={{ cursor: \"pointer\" }}\r\n            >\r\n              <p onClick={() => onPageChange(page)} className=\"page-link\">\r\n                {page}\r\n              </p>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  pageCount: PropTypes.number.isRequired,\r\n  pageSize: PropTypes.number.isRequired,\r\n  currentPage: PropTypes.number.isRequired,\r\n  onPageChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\n\r\nconst GenreList = props => {\r\n  const {\r\n    items,\r\n    onItemSelect,\r\n    textProperty,\r\n    valueProperty,\r\n    selectedItem\r\n  } = props;\r\n  return (\r\n    <ul className=\"list-group m-2\">\r\n      {items.map(item => (\r\n        <li\r\n          key={item[valueProperty]}\r\n          style={{ cursor: \"pointer\" }}\r\n          onClick={() => onItemSelect(item)}\r\n          className={\r\n            item === selectedItem ? \"list-group-item active\" : \"list-group-item\"\r\n          }\r\n        >\r\n          {item[textProperty]}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nGenreList.defaultProps = {\r\n  textProperty: \"name\",\r\n  valueProperty: \"_id\"\r\n};\r\n\r\nexport default GenreList;\r\n","import React, { Component } from \"react\";\r\n\r\nclass TableHeader extends Component {\r\n  raiseSort = path => {\r\n    const sortColumn = { ...this.props.sortColumn };\r\n    if (sortColumn.path === path) {\r\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\r\n    } else {\r\n      sortColumn.path = path;\r\n      sortColumn.order = \"asc\";\r\n    }\r\n    this.props.onSort(sortColumn);\r\n  };\r\n\r\n  renderSortIcon = column => {\r\n    const { sortColumn } = this.props;\r\n    if (column.path !== sortColumn.path) return null;\r\n    if (sortColumn.order === \"asc\") return <i className=\"fa fa-sort-asc\" />;\r\n    return <i className=\"fa fa-sort-desc\" />;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <thead>\r\n        <tr>\r\n          {this.props.columns.map(column => (\r\n            <th\r\n              style={{ cursor: \"pointer\" }}\r\n              key={column.path || column.key}\r\n              onClick={() => this.raiseSort(column.path)}\r\n            >\r\n              {column.label} {this.renderSortIcon(column)}\r\n            </th>\r\n          ))}\r\n        </tr>\r\n      </thead>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableHeader;\r\n","import React, { Component } from \"react\";\r\nimport _ from \"lodash\";\r\n\r\nclass TableBody extends Component {\r\n  renderCell = (item, column) => {\r\n    if (column.content) return column.content(item);\r\n    return _.get(item, column.path);\r\n  };\r\n\r\n  createKey = (item, column) => {\r\n    return item._id + (column.path || column.key);\r\n  };\r\n\r\n  render() {\r\n    const { data, columns } = this.props;\r\n    return (\r\n      <tbody>\r\n        {data.map(item => (\r\n          <tr key={item._id}>\r\n            {columns.map(column => (\r\n              <td key={this.createKey(item, column)}>\r\n                {this.renderCell(item, column)}\r\n              </td>\r\n            ))}\r\n          </tr>\r\n        ))}\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport TableHeader from \"./TableHeader\";\r\nimport TableBody from \"./TableBody\";\r\n\r\nconst Table = props => {\r\n  const { movies, onLike, onDelete, sortColumn, onSort, columns } = props;\r\n  return (\r\n    <table className=\"table\">\r\n      <TableHeader sortColumn={sortColumn} onSort={onSort} columns={columns} />\r\n      <TableBody\r\n        data={movies}\r\n        onLike={onLike}\r\n        onDelete={onDelete}\r\n        columns={columns}\r\n      />\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;\r\n","import React from \"react\";\r\n\r\nconst Like = props => {\r\n  let classes = \"fa fa-heart\";\r\n  if (!props.liked) classes += \"-o\";\r\n  return (\r\n    <i\r\n      onClick={props.onClick}\r\n      style={{ cursor: \"pointer\" }}\r\n      className={classes}\r\n      aria-hidden=\"true\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default Like;\r\n","import React, { Component } from \"react\";\r\nimport Table from \"./Table\";\r\nimport Like from \"./like\";\r\n\r\nclass MoviesTable extends Component {\r\n  columns = [\r\n    { path: \"title\", label: \"Title\" },\r\n    { path: \"genre.name\", label: \"Genre\" },\r\n    { path: \"numberInStock\", label: \"Stock\" },\r\n    { path: \"dailyRentalRate\", label: \"Rate\" },\r\n    {\r\n      key: \"like\",\r\n      content: movie => (\r\n        <Like liked={movie.liked} onClick={() => this.props.onLike(movie)} />\r\n      )\r\n    },\r\n    {\r\n      key: \"delete\",\r\n      content: movie => (\r\n        <button\r\n          onClick={() => this.props.onDelete(movie._id)}\r\n          className=\"btn btn-outline-danger btn-sm\"\r\n        >\r\n          Delete\r\n        </button>\r\n      )\r\n    }\r\n  ];\r\n  render() {\r\n    const { movies, onLike, onDelete, sortColumn, onSort } = this.props;\r\n    return (\r\n      <Table\r\n        movies={movies}\r\n        onLike={onLike}\r\n        onDelete={onDelete}\r\n        sortColumn={sortColumn}\r\n        onSort={onSort}\r\n        columns={this.columns}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default MoviesTable;\r\n","export const genres = [\n  { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n  { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n  { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" }\n];\n\nexport function getGenres() {\n  return genres.filter(g => g);\n}\n","import * as genresAPI from \"./fakeGenreService\";\n\nconst movies = [\n  {\n    _id: \"5b21ca3eeb7f6fbccd471815\",\n    title: \"Terminator\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 6,\n    dailyRentalRate: 2.5,\n    publishDate: \"2018-01-03T19:04:28.809Z\",\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471816\",\n    title: \"Die Hard\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 5,\n    dailyRentalRate: 2.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471817\",\n    title: \"Get Out\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 8,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471819\",\n    title: \"Trip to Italy\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181a\",\n    title: \"Airplane\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181b\",\n    title: \"Wedding Crashers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471814\", name: \"Comedy\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181e\",\n    title: \"Gone Girl\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 7,\n    dailyRentalRate: 4.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd47181f\",\n    title: \"The Sixth Sense\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471820\", name: \"Thriller\" },\n    numberInStock: 4,\n    dailyRentalRate: 3.5,\n    liked: false\n  },\n  {\n    _id: \"5b21ca3eeb7f6fbccd471821\",\n    title: \"The Avengers\",\n    genre: { _id: \"5b21ca3eeb7f6fbccd471818\", name: \"Action\" },\n    numberInStock: 7,\n    dailyRentalRate: 3.5,\n    liked: false\n  }\n];\n\nexport function getMovies() {\n  return movies;\n}\n\nexport function getMovie(id) {\n  return movies.find(m => m._id === id);\n}\n\nexport function saveMovie(movie) {\n  let movieInDb = movies.find(m => m._id === movie._id) || {};\n  movieInDb.name = movie.name;\n  movieInDb.genre = genresAPI.genres.find(g => g._id === movie.genreId);\n  movieInDb.numberInStock = movie.numberInStock;\n  movieInDb.dailyRentalRate = movie.dailyRentalRate;\n\n  if (!movieInDb._id) {\n    movieInDb._id = Date.now();\n    movies.push(movieInDb);\n  }\n\n  return movieInDb;\n}\n\nexport function deleteMovie(id) {\n  let movieInDb = movies.find(m => m._id === id);\n  movies.splice(movies.indexOf(movieInDb), 1);\n  return movieInDb;\n}\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport Pagination from \"./common/pagination\";\nimport GenreList from \"./common/genrelist\";\nimport MoviesTable from \"./common/MoviesTable\";\nimport { paginate } from \"./utils/paginate\";\nimport * as moviesAPI from \"./services/fakeMovieService\";\nimport { getGenres } from \"./services/fakeGenreService\";\n\nclass App extends Component {\n  state = {\n    movies: [],\n    genres: [],\n    pageSize: 4,\n    currentPage: 1,\n    selectedGenre: null,\n    sortColumn: {\n      path: \"title\",\n      order: \"asc\"\n    }\n  };\n\n  componentDidMount() {\n    const genres = [{ name: \"All\", _id: \"12312312313\" }, ...getGenres()];\n    this.setState({\n      movies: moviesAPI.getMovies(),\n      genres: genres,\n      selectedGenre: genres[0]\n    });\n  }\n\n  styles = {\n    topPad: {\n      paddingTop: \"25px\"\n    }\n  };\n\n  handleDelete = id => {\n    this.setState({\n      movies: this.state.movies.filter(movie => {\n        return movie._id !== id;\n      })\n    });\n  };\n\n  handleSort = sortColumn => {\n    this.setState({ sortColumn });\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  getPageData = () => {\n    const {\n      movies: allMovies,\n      currentPage,\n      pageSize,\n      selectedGenre,\n      sortColumn\n    } = this.state;\n\n    const filtered =\n      selectedGenre && !(selectedGenre.name === \"All\")\n        ? allMovies.filter(m => m.genre.name === selectedGenre.name)\n        : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return { totalCount: filtered.length, data: movies };\n  };\n\n  render() {\n    const {\n      sortColumn,\n      selectedGenre,\n      genres,\n      pageSize,\n      currentPage\n    } = this.state;\n\n    const { totalCount, data: movies } = this.getPageData();\n\n    return (\n      <main className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-3\" style={this.styles.topPad}>\n            <GenreList\n              items={genres}\n              onItemSelect={this.handleGenreSelect}\n              selectedItem={selectedGenre}\n            />\n          </div>\n          <div className=\"col\">\n            {(() => {\n              if (totalCount === 0)\n                return (\n                  <p style={this.styles.topPad}>\n                    There are no movies in the selected database.\n                  </p>\n                );\n              else\n                return (\n                  <div>\n                    <p style={this.styles.topPad}>\n                      Showing {totalCount} movies in the database.\n                    </p>\n                    <React.Fragment>\n                      <MoviesTable\n                        movies={movies}\n                        onLike={this.handleLike}\n                        onDelete={this.handleDelete}\n                        onSort={this.handleSort}\n                        sortColumn={sortColumn}\n                      />\n                      <Pagination\n                        pageCount={totalCount}\n                        pageSize={pageSize}\n                        onPageChange={this.handlePageChange}\n                        currentPage={currentPage}\n                      />\n                    </React.Fragment>\n                  </div>\n                );\n            })()}\n          </div>\n        </div>\n      </main>\n    );\n  }\n}\n\nexport default App;\n","import _ from \"lodash\";\r\n\r\nexport function paginate(items, pageNumber, pageSize) {\r\n  const startIndex = (pageNumber - 1) * pageSize;\r\n  return _(items)\r\n    .slice(startIndex)\r\n    .take(pageSize)\r\n    .value();\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"font-awesome/css/font-awesome.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}